{"version":3,"sources":["constants.js","utils/utils.js","reducer.js","features/square/square.js","features/button-controls/buttonUtils.js","actions.js","features/button-controls/buttons.js","index.js"],"names":["IMG","COIN","BUTTON_SETUP","left","type","posChange","up","right","down","KEY_DOWN_SET_UP","OUT_OF_RANGE_SETUP","generateCoinPos","magePos","size","boardSize","Math","pow","coinPos","floor","random","startingPos","mage","coin","Array","fill","reduce","obj","item","index","squareObj","value","id","getInitState","Constants","initState","initPositions","rootReducer","combineReducers","squares","state","action","currentMagePos","newMagePos","img","newCoinPos","coinImg","coinAndMagePos","console","dir","position","gameOver","isOver","score","store","createStore","applyMiddleware","thunkMiddleware","Square","props","getImage","className","whichImage","image","src","style","width","height","makeMove","dispatch","log","isScored","hasScored","isOutOfRange","curMagePos","updateCoinSquare","updateCoinMagePos","Actions","curPos","newPos","updateMageSquare","includes","ButtonPanel","buttons","Button","Object","keys","map","key","buttonObj","class","Utils","useDispatch","onClick","Board","handleKeyDown","event","keyCode","keyObj","React","useEffect","window","addEventListener","removeEventListener","board","squaresObj","rowLength","i","length","rowEndIndex","row","j","push","Game","useSelector","render","isGameOver","renderBoard","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b7f1a52b.chunk.js","sourcesContent":["export const BOARD_SIZE = 5;\nexport const MAGE_START_POS = 12;\nexport const IMG = \"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/e32c26ba-2bab-4113-ae4d-2e0fddb012f3/dbhkef2-0480b859-092c-47fc-ba78-5f299736997e.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2UzMmMyNmJhLTJiYWItNDExMy1hZTRkLTJlMGZkZGIwMTJmM1wvZGJoa2VmMi0wNDgwYjg1OS0wOTJjLTQ3ZmMtYmE3OC01ZjI5OTczNjk5N2UuZ2lmIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.tNrQD0-ER3hxMGn67aqGJm8fSUcTuDFEkXtLgYT9SfU\";\nexport const COIN = \"./dodg.gif\";\n\nexport const BUTTON_SETUP = {\n    left: {\n        type: 'MOVE_LEFT',\n        posChange: 1\n    },\n    up: {\n        type: 'MOVE_UP',\n        posChange: 5\n    },\n    right: {\n        type: 'MOVE_RIGHT',\n        posChange: -1\n    },\n    down: {\n        type: 'MOVE_DOWN',\n        posChange: -5\n    }\n}\n\nexport const KEY_DOWN_SET_UP = {\n    '37': {\n        type: 'MOVE_LEFT',\n        posChange: 1\n    },\n    '38': {\n        type: 'MOVE_UP',\n        posChange: 5\n    },\n    '39': {\n        type: 'MOVE_RIGHT',\n        posChange: -1\n    },\n    '40': {\n        type: 'MOVE_DOWN',\n        posChange: -5\n    }\n}\n\n//range of indexes moving from which\n//we will get out of range and game will be over\nexport const OUT_OF_RANGE_SETUP = {\n    \"1\": [0, 5, 10, 15, 20],\n    \"5\": [0, 1, 2, 3, 4],\n    \"-1\": [4, 9, 14, 19, 24],\n    \"-5\": [20, 21, 22, 23, 24]\n};\n","export const getInitState = (size, startingPos, mage, coin) => {\n    const coinPos = generateCoinPos(startingPos, size);\n    const boardSize = Math.pow(size, 2);\n    const initObj = {};\n\n    const initState = Array(boardSize).fill(null).reduce(\n        (obj, item, index) => {\n\n            const setMage = startingPos === index\n                ? mage\n                : null;\n\n            const setCoin = coinPos === index\n                ? coin\n                : null;\n\n            const squareObj = {\n                value: null,\n                id: index,\n                mage: setMage,\n                coin: setCoin\n            };\n\n            return {\n                ...obj,\n                [index]: squareObj\n            };\n        }, initObj\n    );\n\n    return [initState, coinPos]\n}\n\nexport const generateBoard = (squaresObj, Square, rowLength) => {\n    const keys = Object.keys(squaresObj);\n    const board = [];\n\n    for (let i = 0; i < keys.length; i += rowLength) {\n\n        const rowEndIndex = i + rowLength;\n        let row = [];\n\n        for (let j = i; j < rowEndIndex; j++) {\n            row.push(\n                <Square\n                    key={j}\n                    id={j}\n                    squareObj={squaresObj[j]}\n                />\n            );\n        };\n\n        board.push(\n            <div key={i} className=\"board-row\">\n                {row}\n            </div>\n        );\n\n    };\n    return board;\n}\n\nexport const generateCoinPos = (magePos, size) => {\n    const boardSize = Math.pow(size, 2);\n    const coinPos = Math.floor(Math.random() * boardSize);\n\n    if (coinPos === magePos) {\n        const backUpPos = generateCoinPos(magePos, size);\n        return backUpPos;\n\n    } else {\n        return coinPos;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport * as Constants from './constants.js';\nimport { getInitState } from './utils/utils.js';\n\n// since coinPos is a random number, need to\n// return it back from InitState func\nconst [initState, coinPos] = getInitState(\n    Constants.BOARD_SIZE,\n    Constants.MAGE_START_POS,\n    Constants.IMG,\n    Constants.COIN\n);\n\nconst initPositions = {\n    'mage': Constants.MAGE_START_POS,\n    'coin': coinPos\n};\n\n\n// each square calls this and gets updated state\nconst squares = (state = initState, action) => {\n    switch (action.type) {\n        case \"MOVE_UP\":\n        case \"MOVE_DOWN\":\n        case \"MOVE_RIGHT\":\n        case \"MOVE_LEFT\":\n            return {\n                ...state,\n                [action.currentMagePos]: {\n                    ...state[action.currentMagePos],\n                    mage: null\n                },\n                [action.newMagePos]: {\n                    ...state[action.newMagePos],\n                    mage: action.img\n                }\n            }\n        case \"MOVE_UP_COIN_RESET\":\n        case \"MOVE_DOWN_COIN_RESET\":\n        case \"MOVE_RIGHT_COIN_RESET\":\n        case \"MOVE_LEFT_COIN_RESET\":\n            return {\n                ...state,\n                [action.currentMagePos]: {\n                    ...state[action.currentMagePos],\n                    mage: null\n                },\n                [action.newMagePos]: {\n                    ...state[action.newMagePos],\n                    mage: action.img,\n                    coin: null\n                },\n                [action.newCoinPos]: {\n                    ...state[action.newCoinPos],\n                    coin: action.coinImg,\n                    mage: null\n                }\n            }\n        case \"RESET\":\n            return initState;\n        default:\n            return state\n    }\n};\n\nconst coinAndMagePos = (state = initPositions, action) => {\n    switch (action.type) {\n        case \"UPDATE_BOTH\":\n            console.dir(action);\n            return {\n                ...state,\n                [action.coin]: action.coinPos,\n                [action.mage]: action.magePos\n            }\n        case \"UPDATE_MAGE_POS\":\n            return {\n                ...state,\n                [action.mage]: action.position\n            }\n        case \"UPDATE_COIN_POS\":\n            return {\n                ...state,\n                [action.coin]: action.position\n            }\n        case \"RESET\":\n            return initPositions;\n        default:\n            return state\n    };\n}\n\nconst gameOver = (state = false, action) => {\n    switch (action.type) {\n        case \"GAME_OVER\":\n            return action.isOver;\n        case \"RESET\":\n            return false;\n        default:\n            return state\n    };\n}\n\nconst score = (state = 0, action) => {\n    switch (action.type) {\n        case \"ADD_ONE\":\n            return state + action.value;\n        case \"RESET\":\n            return 0;\n        default:\n            return state;\n    }\n}\n\n\n\nconst rootReducer = combineReducers({\n    squares: squares,\n    coinAndMagePos: coinAndMagePos,\n    gameOver: gameOver,\n    score: score\n});\n\nconst store = createStore(\n    rootReducer, \n    applyMiddleware(thunkMiddleware)\n);\n\nexport { store };","\nexport const Square = (props) => {\n    const squareObj = props.squareObj;\n\n    const mage = getImage(\"mage\", squareObj.mage);\n    const coin = getImage(\"coin\", squareObj.coin);\n\n    return (\n        <div className='square' id={props.id} >\n            {mage || coin}\n        </div>\n    );\n};\n\nconst getImage = (whichImage, image) => {\n    switch (whichImage) {\n        case \"mage\":\n            const mage = image\n                ? <img src={image} style={{ width: \"100%\", height: \"100%\" }} />\n                : null;\n            return mage;\n        case \"coin\":\n            const coin = image\n                ? <img src={image} style={{ width: \"50%\", height: \"50%\" }} />\n                : null;\n            return coin;\n    }\n}","import * as Constants from \"../../constants.js\"\nimport { generateCoinPos } from \"../../utils/utils.js\";\nimport * as Actions from \"../../actions.js\"\n\n\nexport const buttonSetUp = (Button, props) => {\n    const buttons = Object.keys(Constants.BUTTON_SETUP).map(key => {\n        const buttonObj = Constants.BUTTON_SETUP[key];\n\n        return (\n            <Button\n                key={key}\n                class='button'\n                value={key}\n                makeMove={makeMove}\n                coinAndMagePos={props.coinAndMagePos}\n                buttonObj={buttonObj}\n                img={props.img}\n                coinImg={props.coinImg}\n            />\n        )\n    })\n\n    return buttons;\n}\n\nexport const makeMove = (coinAndMagePos, img, coinImg, obj, dispatch) => {\n    console.log('makeMove')\n    // do a check to see if we have gone over the boarder first\n    const currentMagePos = coinAndMagePos.mage;\n    const posChange = obj['posChange'];\n    const type = obj['type'];\n\n    const newMagePos = currentMagePos - posChange;\n    const isScored = hasScored(coinAndMagePos, posChange);\n\n\n    const isGameOver = isOutOfRange(currentMagePos, posChange);\n    if (isGameOver) {\n        dispatch(\n            Actions.gameOver()\n        );\n    } else if (isScored) {\n        const newCoinPos = generateCoinPos(newMagePos, Constants.BOARD_SIZE);\n        dispatch(\n            Actions.updateStateWhenScored(\n                type,\n                currentMagePos,\n                newMagePos,\n                newCoinPos,\n                img,\n                coinImg\n            )\n        );\n    } else {\n        dispatch(\n            Actions.updateStateWhenMove(\n                type,\n                currentMagePos,\n                newMagePos,\n                img\n            )\n        );\n    }\n}\n\nconst isOutOfRange = (magePos, posChange) => {\n    const outRangeList = Constants.OUT_OF_RANGE_SETUP[`${posChange}`];\n    return outRangeList.includes(magePos);\n}\n\n\nconst hasScored = (coinAndMagePos, posChange) => {\n    const newMagePos = coinAndMagePos.mage - posChange;\n    const result = newMagePos === coinAndMagePos.coin\n        ? true\n        : false;\n    return result;\n}\n","\n// ACTIONS //\nconst addOne = () => {\n    return {\n        type: 'ADD_ONE',\n        value: 1 \n    }\n}\n\nconst updateMageSquare = (type, curPos, newPos, img) => {\n    return {\n        type: type,\n        currentMagePos: curPos,\n        newMagePos: newPos,\n        img: img\n    }\n}\n\nconst updateMagePos = (newPos) => {\n    return {\n        type: 'UPDATE_MAGE_POS',\n        mage: 'mage',\n        position: newPos\n    }\n}\n\nconst updateCoinSquare = (\n    type, \n    curMagePos, \n    newMagePos,\n    newCoinPos, \n    img, \n    coinImg\n) => {\n    return {\n        type: `${type}_COIN_RESET`,\n        currentMagePos: curMagePos,\n        newMagePos: newMagePos,\n        newCoinPos: newCoinPos,\n        img: img,\n        coinImg: coinImg\n    }\n}\n\nconst updateCoinMagePos = (newMagePos, newCoinPos) => {\n    return {\n        type: 'UPDATE_BOTH',\n        mage: 'mage',\n        magePos: newMagePos,\n        coin: 'coin',\n        coinPos: newCoinPos\n    }\n}\n\n// ACTION CREATORS //\nexport const gameOver = () => dispatch => {\n    dispatch({\n        type: 'GAME_OVER',\n        isOver: true\n    });\n}\n\nexport const updateStateWhenScored = (\n    type, \n    curMagePos, \n    newMagePos, \n    newCoinPos, \n    img, \n    coinImg,\n) => dispatch => {\n    dispatch(\n        updateCoinSquare(\n            type, \n            curMagePos, \n            newMagePos, \n            newCoinPos, \n            img, \n            coinImg\n        )\n    );\n    dispatch(\n        updateCoinMagePos(\n            newMagePos,\n            newCoinPos\n        )\n    );\n    dispatch(\n        addOne()\n    );\n}\n\nexport const updateStateWhenMove = (\n    type, \n    curMagePos, \n    newMagePos,  \n    img,\n) => dispatch => {\n    dispatch(\n        updateMageSquare(\n            type, \n            curMagePos, \n            newMagePos,  \n            img,\n        )\n    );\n    dispatch(\n        updateMagePos(newMagePos)\n    );\n}","import { useDispatch } from \"react-redux\"\nimport * as Utils from \"./buttonUtils.js\"\n\nexport const ButtonPanel = (props) => {\n    const buttons = Utils.buttonSetUp(Button, props);\n\n    return (\n        <div className='controls'>\n            {buttons}\n        </div>\n    )\n}\n\nconst Button = (props) => {\n    const dispatch = useDispatch();\n    return (\n        <div className={props.class} onClick={() => props.makeMove(\n            props.coinAndMagePos,\n            props.img,\n            props.coinImg,\n            props.buttonObj,\n            dispatch\n        )}>\n            {props.value}\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/button-controls.css';\n\nimport { store } from './reducer.js'\nimport { Provider } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as Utils from './utils/utils.js';\nimport * as Constants from './constants.js';\nimport { Square } from './features/square/square.js';\nimport { ButtonPanel } from './features/button-controls/buttons.js';\nimport { makeMove } from './features/button-controls/buttonUtils.js';\n\n\nconst Board = (props) => {\n    console.log('reset');\n    // const dispatch = useDispatch();\n\n    const handleKeyDown = (event) => {\n        const keyCodes = Object.keys(Constants.KEY_DOWN_SET_UP);\n        const isMoveMade = keyCodes.includes(`${event.keyCode}`)\n            ? true\n            : false;\n\n        if (isMoveMade) {\n            console.log(event.keyCode);\n            const keyObj = Constants.KEY_DOWN_SET_UP[`${event.keyCode}`];\n            makeMove(\n                props.coinAndMagePos,\n                props.img,\n                props.coinImg,\n                keyObj,\n                props.dispatch\n            );\n        }\n        // console.log(\"key was pressed\", event.keyCode);\n    }\n\n    // adding here since this components unmounts if we lose the game\n    React.useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            // cleanup this component\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n\n    }, [handleKeyDown]);\n\n    const board = Utils.generateBoard(\n        props.squares,\n        Square,\n        Constants.BOARD_SIZE\n    );\n\n    return (\n        <div className={props.class}>\n            {board}\n        </div>\n    );\n}\n\n\nconst Game = () => {\n    const score = useSelector(store => store.score);\n    const dispatch = useDispatch();\n    const isGameOver = useSelector(store => store.gameOver);\n    const squares = useSelector(store => store.squares);\n    const coinAndMagePos = useSelector(store => store.coinAndMagePos);\n\n    const render = renderBoard(\n        dispatch,\n        isGameOver,\n        squares,\n        coinAndMagePos,\n        score\n    );\n\n    return (\n        <div className=\"game\">\n            {render}\n        </div>\n    );\n}\n\n// ========================================\n\nReactDOM.render(\n    <Provider store={store}>\n        <Game />\n    </Provider>,\n    document.getElementById('root')\n);\n\nfunction renderBoard(dispatch, isGameOver, squares, coinAndMagePos, score) {\n    if (isGameOver) {\n        return (\n            <div className=\"game-board\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"board lost\">YOU LOST YOU FILTY COW!</div>\n                <button onClick={() =>\n                    dispatch({\n                        type: 'RESET',\n                    })\n                }>restart</button>\n            </div >\n        )\n    } else {\n        return (\n            <div className=\"game-board\">\n                <div className=\"score\">Score: {score}</div>\n                <Board\n                    class=\"board\"\n                    squares={squares}\n                    coinAndMagePos={coinAndMagePos}\n                    img={Constants.IMG}\n                    coinImg={Constants.COIN}\n                    dispatch={dispatch}\n                />\n                <ButtonPanel\n                    coinAndMagePos={coinAndMagePos}\n                    img={Constants.IMG}\n                    coinImg={Constants.COIN}\n                />\n            </div>\n        )\n    }\n}\n\n\nconst useKeyDown = (callback, props) => {\n    useEffect(() => {\n        window.addEventListener('keydown', callback);\n        return () => window.removeEventListener('keydown', callback)\n    }, [callback]);\n}\n\n"],"sourceRoot":""}