{"version":3,"sources":["constants.js","utils/utils.js","reducer.js","features/square/square.js","actions.js","features/button-controls/buttonUtils.js","features/button-controls/buttons.js","index.js"],"names":["IMG","COIN","BUTTON_SETUP","left","type","posChange","up","right","down","KEY_DOWN_SET_UP","OUT_OF_RANGE_SETUP","generateCoinPos","magePos","size","boardSize","Math","pow","coinPos","floor","random","startingPos","mage","coin","Array","fill","reduce","obj","item","index","squareObj","value","id","getInitState","Constants","initState","initPositions","initTimer","rootReducer","combineReducers","squares","state","action","currentMagePos","newMagePos","img","newCoinPos","coinImg","coinAndMagePos","console","dir","position","gameOver","isOver","score","timer","timerId","store","createStore","applyMiddleware","thunkMiddleware","Square","props","getImage","className","whichImage","image","src","style","width","height","decrementTimer","dispatch","makeMove","log","startDecrementCounter","isScored","hasScored","isOutOfRange","curMagePos","updateCoinSquare","updateCoinMagePos","Actions","curPos","newPos","updateMageSquare","setTimeout","tick","includes","ButtonPanel","buttons","Button","Object","keys","map","key","buttonObj","class","Utils","useDispatch","onClick","Board","handleKeyDown","event","keyCode","keyObj","React","useEffect","window","addEventListener","removeEventListener","board","squaresObj","rowLength","i","length","rowEndIndex","row","j","push","Game","useSelector","isGameOver","time","clearTimeout","render","renderBoard","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.879aeccd.chunk.js","sourcesContent":["export const BOARD_SIZE = 5;\nexport const MAGE_START_POS = 12;\nexport const IMG = \"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/e32c26ba-2bab-4113-ae4d-2e0fddb012f3/dbhkef2-0480b859-092c-47fc-ba78-5f299736997e.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2UzMmMyNmJhLTJiYWItNDExMy1hZTRkLTJlMGZkZGIwMTJmM1wvZGJoa2VmMi0wNDgwYjg1OS0wOTJjLTQ3ZmMtYmE3OC01ZjI5OTczNjk5N2UuZ2lmIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.tNrQD0-ER3hxMGn67aqGJm8fSUcTuDFEkXtLgYT9SfU\";\nexport const COIN = \"./dodg.gif\";\n\nexport const BUTTON_SETUP = {\n    left: {\n        type: 'MOVE_LEFT',\n        posChange: 1\n    },\n    up: {\n        type: 'MOVE_UP',\n        posChange: 5\n    },\n    right: {\n        type: 'MOVE_RIGHT',\n        posChange: -1\n    },\n    down: {\n        type: 'MOVE_DOWN',\n        posChange: -5\n    }\n}\n\nexport const KEY_DOWN_SET_UP = {\n    '37': {\n        type: 'MOVE_LEFT',\n        posChange: 1\n    },\n    '38': {\n        type: 'MOVE_UP',\n        posChange: 5\n    },\n    '39': {\n        type: 'MOVE_RIGHT',\n        posChange: -1\n    },\n    '40': {\n        type: 'MOVE_DOWN',\n        posChange: -5\n    }\n}\n\n//range of indexes moving from which\n//we will get out of range and game will be over\nexport const OUT_OF_RANGE_SETUP = {\n    \"1\": [0, 5, 10, 15, 20],\n    \"5\": [0, 1, 2, 3, 4],\n    \"-1\": [4, 9, 14, 19, 24],\n    \"-5\": [20, 21, 22, 23, 24]\n};\n","export const getInitState = (size, startingPos, mage, coin) => {\n    const coinPos = generateCoinPos(startingPos, size);\n    const boardSize = Math.pow(size, 2);\n    const initObj = {};\n\n    const initState = Array(boardSize).fill(null).reduce(\n        (obj, item, index) => {\n\n            const setMage = startingPos === index\n                ? mage\n                : null;\n\n            const setCoin = coinPos === index\n                ? coin\n                : null;\n\n            const squareObj = {\n                value: null,\n                id: index,\n                mage: setMage,\n                coin: setCoin\n            };\n\n            return {\n                ...obj,\n                [index]: squareObj\n            };\n        }, initObj\n    );\n\n    return [initState, coinPos]\n}\n\nexport const generateBoard = (squaresObj, Square, rowLength) => {\n    const keys = Object.keys(squaresObj);\n    const board = [];\n\n    for (let i = 0; i < keys.length; i += rowLength) {\n\n        const rowEndIndex = i + rowLength;\n        let row = [];\n\n        for (let j = i; j < rowEndIndex; j++) {\n            row.push(\n                <Square\n                    key={j}\n                    id={j}\n                    squareObj={squaresObj[j]}\n                />\n            );\n        };\n\n        board.push(\n            <div key={i} className=\"board-row\">\n                {row}\n            </div>\n        );\n\n    };\n    return board;\n}\n\nexport const generateCoinPos = (magePos, size) => {\n    const boardSize = Math.pow(size, 2);\n    const coinPos = Math.floor(Math.random() * boardSize);\n\n    if (coinPos === magePos) {\n        const backUpPos = generateCoinPos(magePos, size);\n        return backUpPos;\n\n    } else {\n        return coinPos;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport * as Constants from './constants.js';\nimport { getInitState } from './utils/utils.js';\n\n// since coinPos is a random number, need to\n// return it back from InitState func\nconst [initState, coinPos] = getInitState(\n    Constants.BOARD_SIZE,\n    Constants.MAGE_START_POS,\n    Constants.IMG,\n    Constants.COIN\n);\n\nconst initPositions = {\n    'mage': Constants.MAGE_START_POS,\n    'coin': coinPos\n};\n\nconst initTimer = {\n    'time': 60,\n    'timerId': null\n};\n\n\n// each square calls this and gets updated state\nconst squares = (state = initState, action) => {\n    switch (action.type) {\n        case \"MOVE_UP\":\n        case \"MOVE_DOWN\":\n        case \"MOVE_RIGHT\":\n        case \"MOVE_LEFT\":\n            return {\n                ...state,\n                [action.currentMagePos]: {\n                    ...state[action.currentMagePos],\n                    mage: null\n                },\n                [action.newMagePos]: {\n                    ...state[action.newMagePos],\n                    mage: action.img\n                }\n            }\n        case \"MOVE_UP_COIN_RESET\":\n        case \"MOVE_DOWN_COIN_RESET\":\n        case \"MOVE_RIGHT_COIN_RESET\":\n        case \"MOVE_LEFT_COIN_RESET\":\n            return {\n                ...state,\n                [action.currentMagePos]: {\n                    ...state[action.currentMagePos],\n                    mage: null\n                },\n                [action.newMagePos]: {\n                    ...state[action.newMagePos],\n                    mage: action.img,\n                    coin: null\n                },\n                [action.newCoinPos]: {\n                    ...state[action.newCoinPos],\n                    coin: action.coinImg,\n                    mage: null\n                }\n            }\n        case \"RESET\":\n            return initState;\n        default:\n            return state\n    }\n};\n\nconst coinAndMagePos = (state = initPositions, action) => {\n    switch (action.type) {\n        case \"UPDATE_BOTH\":\n            console.dir(action);\n            return {\n                ...state,\n                [action.coin]: action.coinPos,\n                [action.mage]: action.magePos\n            }\n        case \"UPDATE_MAGE_POS\":\n            return {\n                ...state,\n                [action.mage]: action.position\n            }\n        case \"UPDATE_COIN_POS\":\n            return {\n                ...state,\n                [action.coin]: action.position\n            }\n        case \"RESET\":\n            return initPositions;\n        default:\n            return state\n    };\n}\n\nconst gameOver = (state = false, action) => {\n    switch (action.type) {\n        case \"GAME_OVER\":\n            return action.isOver;\n        case \"RESET\":\n            return false;\n        default:\n            return state\n    };\n}\n\nconst score = (state = 0, action) => {\n    switch (action.type) {\n        case \"ADD_ONE\":\n            return state + action.value;\n        case \"RESET\":\n            return 0;\n        default:\n            return state;\n    }\n}\n\nconst timer = (state = initTimer, action) => {\n    switch(action.type) {\n        case \"DECREMENT_COUNTER\":\n            return {\n                ...state,\n                ['time'] : state['time'] - 1,\n                ['timerId']: action.timerId \n            }\n        case \"RESET\":\n            return initTimer;\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = combineReducers({\n    squares: squares,\n    coinAndMagePos: coinAndMagePos,\n    gameOver: gameOver,\n    score: score,\n    timer: timer\n});\n\nconst store = createStore(\n    rootReducer, \n    applyMiddleware(thunkMiddleware)\n);\n\nexport { store };","\nexport const Square = (props) => {\n    const squareObj = props.squareObj;\n\n    const mage = getImage(\"mage\", squareObj.mage);\n    const coin = getImage(\"coin\", squareObj.coin);\n\n    return (\n        <div className='square' id={props.id} >\n            {mage || coin}\n        </div>\n    );\n};\n\nconst getImage = (whichImage, image) => {\n    switch (whichImage) {\n        case \"mage\":\n            const mage = image\n                ? <img src={image} style={{ width: \"100%\", height: \"100%\" }} />\n                : null;\n            return mage;\n        case \"coin\":\n            const coin = image\n                ? <img src={image} style={{ width: \"50%\", height: \"50%\" }} />\n                : null;\n            return coin;\n    }\n}","\n// ACTIONS //\nconst addOne = () => {\n    return {\n        type: 'ADD_ONE',\n        value: 1 \n    }\n}\n\nconst updateMageSquare = (type, curPos, newPos, img) => {\n    return {\n        type: type,\n        currentMagePos: curPos,\n        newMagePos: newPos,\n        img: img\n    }\n}\n\nconst updateMagePos = (newPos) => {\n    return {\n        type: 'UPDATE_MAGE_POS',\n        mage: 'mage',\n        position: newPos\n    }\n}\n\nconst updateCoinSquare = (\n    type, \n    curMagePos, \n    newMagePos,\n    newCoinPos, \n    img, \n    coinImg\n) => {\n    return {\n        type: `${type}_COIN_RESET`,\n        currentMagePos: curMagePos,\n        newMagePos: newMagePos,\n        newCoinPos: newCoinPos,\n        img: img,\n        coinImg: coinImg\n    }\n}\n\nconst updateCoinMagePos = (newMagePos, newCoinPos) => {\n    return {\n        type: 'UPDATE_BOTH',\n        mage: 'mage',\n        magePos: newMagePos,\n        coin: 'coin',\n        coinPos: newCoinPos\n    }\n}\n\n// ACTION CREATORS //\nexport const gameOver = () => dispatch => {\n    dispatch({\n        type: 'GAME_OVER',\n        isOver: true\n    });\n}\n\nexport const decrementTimer = (timerId) => dispatch => {\n    dispatch({\n        type: 'DECREMENT_COUNTER',\n        timerId: timerId\n    });\n}\n\nexport const updateStateWhenScored = (\n    type, \n    curMagePos, \n    newMagePos, \n    newCoinPos, \n    img, \n    coinImg,\n) => dispatch => {\n    dispatch(\n        updateCoinSquare(\n            type, \n            curMagePos, \n            newMagePos, \n            newCoinPos, \n            img, \n            coinImg\n        )\n    );\n    dispatch(\n        updateCoinMagePos(\n            newMagePos,\n            newCoinPos\n        )\n    );\n    dispatch(\n        addOne()\n    );\n}\n\nexport const updateStateWhenMove = (\n    type, \n    curMagePos, \n    newMagePos,  \n    img,\n) => dispatch => {\n    dispatch(\n        updateMageSquare(\n            type, \n            curMagePos, \n            newMagePos,  \n            img,\n        )\n    );\n    dispatch(\n        updateMagePos(newMagePos)\n    );\n}","import * as Constants from \"../../constants.js\"\nimport { generateCoinPos } from \"../../utils/utils.js\";\nimport * as Actions from \"../../actions.js\"\n\n\nexport const buttonSetUp = (Button, props) => {\n    const buttons = Object.keys(Constants.BUTTON_SETUP).map(key => {\n        const buttonObj = Constants.BUTTON_SETUP[key];\n\n        return (\n            <Button\n                key={key}\n                class='button'\n                value={key}\n                makeMove={makeMove}\n                coinAndMagePos={props.coinAndMagePos}\n                buttonObj={buttonObj}\n                img={props.img}\n                coinImg={props.coinImg}\n                timer={props.timer}\n            />\n        )\n    })\n\n    return buttons;\n}\n\nexport const makeMove = (coinAndMagePos, img, coinImg, obj, dispatch, timer) => {\n    console.log('makeMove')\n    if (timer === 60) startDecrementCounter(timer, dispatch); // start time ticks on first move\n    \n    // do a check to see if we have gone over the boarder first\n    const currentMagePos = coinAndMagePos.mage;\n    const posChange = obj['posChange'];\n    const type = obj['type'];\n\n    const newMagePos = currentMagePos - posChange;\n    const isScored = hasScored(coinAndMagePos, posChange);\n\n\n    const isGameOver = isOutOfRange(currentMagePos, posChange);\n    if (isGameOver) {\n        dispatch(\n            Actions.gameOver()\n        );\n    } else if (isScored) {\n        const newCoinPos = generateCoinPos(newMagePos, Constants.BOARD_SIZE);\n        dispatch(\n            Actions.updateStateWhenScored(\n                type,\n                currentMagePos,\n                newMagePos,\n                newCoinPos,\n                img,\n                coinImg\n            )\n        );\n    } else {\n        dispatch(\n            Actions.updateStateWhenMove(\n                type,\n                currentMagePos,\n                newMagePos,\n                img\n            )\n        );\n    }\n}\n\nconst startDecrementCounter = (timer, dispatch) => {\n    timer--;\n    dispatch(\n        Actions.decrementTimer()\n    );\n\n    let timerId = setTimeout(function tick() {\n        if (timer === 0) {\n            dispatch(\n                Actions.gameOver()\n            );\n        } else {\n            console.log('hi');\n            timer--;\n            timerId = setTimeout(tick, 1000);\n            dispatch(\n                Actions.decrementTimer(timerId)\n            );\n        }\n    }, 1000);\n}\n\nconst isOutOfRange = (magePos, posChange) => {\n    const outRangeList = Constants.OUT_OF_RANGE_SETUP[`${posChange}`];\n    return outRangeList.includes(magePos);\n}\n\n\nconst hasScored = (coinAndMagePos, posChange) => {\n    const newMagePos = coinAndMagePos.mage - posChange;\n    const result = newMagePos === coinAndMagePos.coin\n        ? true\n        : false;\n    return result;\n}\n","import { useDispatch } from \"react-redux\"\nimport * as Utils from \"./buttonUtils.js\"\n\nexport const ButtonPanel = (props) => {\n    const buttons = Utils.buttonSetUp(Button, props);\n\n    return (\n        <div className='controls'>\n            {buttons}\n        </div>\n    )\n}\n\nconst Button = (props) => {\n    const dispatch = useDispatch();\n    return (\n        <div className={props.class} onClick={() => props.makeMove(\n            props.coinAndMagePos,\n            props.img,\n            props.coinImg,\n            props.buttonObj,\n            dispatch,\n            props.timer\n        )}>\n            {props.value}\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/button-controls.css';\n\nimport { store } from './reducer.js'\nimport { Provider } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as Utils from './utils/utils.js';\nimport * as Constants from './constants.js';\nimport { Square } from './features/square/square.js';\nimport { ButtonPanel } from './features/button-controls/buttons.js';\nimport { makeMove } from './features/button-controls/buttonUtils.js';\n\n\nconst Board = (props) => {\n    console.log('reset');\n\n    const handleKeyDown = (event) => {\n        const keyCodes = Object.keys(Constants.KEY_DOWN_SET_UP);\n        const isMoveMade = keyCodes.includes(`${event.keyCode}`)\n            ? true\n            : false;\n\n        if (isMoveMade) {\n            console.log(event.keyCode);\n            const keyObj = Constants.KEY_DOWN_SET_UP[`${event.keyCode}`];\n            makeMove(\n                props.coinAndMagePos,\n                props.img,\n                props.coinImg,\n                keyObj,\n                props.dispatch,\n                props.timer\n            );\n        }\n    }\n\n    // adding here since this components unmounts if we lose the game\n    React.useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            // cleanup this component\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n\n    }, [handleKeyDown]);\n\n    const board = Utils.generateBoard(\n        props.squares,\n        Square,\n        Constants.BOARD_SIZE\n    );\n\n    return (\n        <div className={props.class}>\n            {board}\n        </div>\n    );\n}\n\n\nconst Game = () => {\n    const score = useSelector(store => store.score);\n    const dispatch = useDispatch();\n    const isGameOver = useSelector(store => store.gameOver);\n    const squares = useSelector(store => store.squares);\n    const coinAndMagePos = useSelector(store => store.coinAndMagePos);\n    const timer = useSelector(store => store.timer.time);\n    const timerId = useSelector(store => store.timer.timerId);\n\n    if (isGameOver) clearTimeout(timerId);\n    console.log('timerId is:' +timerId);\n\n    const render = renderBoard(\n        dispatch,\n        isGameOver,\n        squares,\n        coinAndMagePos,\n        score,\n        timer\n    );\n\n    return (\n        <div className=\"game\">\n            {render}\n        </div>\n    );\n}\n\n// ========================================\n\nReactDOM.render(\n    <Provider store={store}>\n        <Game />\n    </Provider>,\n    document.getElementById('root')\n);\n\nfunction renderBoard(dispatch, isGameOver, squares, coinAndMagePos, score, timer) {\n    if (isGameOver) {\n        return (\n            <div className=\"game-board\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"timer\">Time Left (sec): {timer}</div>\n                <div className=\"board lost\">YOU LOST YOU FILTY COW!</div>\n                <button onClick={() =>\n                    dispatch({\n                        type: 'RESET',\n                    })\n                }>restart</button>\n            </div >\n        )\n    } else {\n        return (\n            <div className=\"game-board\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"timer\">Time Left (sec): {timer}</div>\n                <Board\n                    class=\"board\"\n                    squares={squares}\n                    coinAndMagePos={coinAndMagePos}\n                    img={Constants.IMG}\n                    coinImg={Constants.COIN}\n                    dispatch={dispatch}\n                    timer={timer}\n                />\n                <ButtonPanel\n                    coinAndMagePos={coinAndMagePos}\n                    img={Constants.IMG}\n                    coinImg={Constants.COIN}\n                />\n            </div>\n        )\n    }\n}\n\n\nconst useKeyDown = (callback, props) => {\n    useEffect(() => {\n        window.addEventListener('keydown', callback);\n        return () => window.removeEventListener('keydown', callback)\n    }, [callback]);\n}\n\n"],"sourceRoot":""}